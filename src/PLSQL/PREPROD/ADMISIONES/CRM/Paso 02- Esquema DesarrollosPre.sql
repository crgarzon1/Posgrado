SET DEFINE OFF;

/* ******************************ELIMINACION DE OBJETOS CREADOS****************************************/
/* ****************************************************************************************************/

DROP TRIGGER CALL_CRM_SERVICE_INTERESADO;

DROP TABLE CTI_INTERESADO_CRM;

DROP PACKAGE PKG_INTERESADOS_CRM;

/* ****************************CREACION DE TABLA PARA INTERESADOS CRM**********************************/
/* ****************************************************************************************************/

CREATE TABLE CTI_INTERESADO_CRM (
    TIPDOC             VARCHAR2 (8),
    NUMDOC             VARCHAR2 (32),
    CODIGO_FACULTAD    VARCHAR2 (2),
    JORNADA_FACULTAD   VARCHAR2 (1),
    ANIO               VARCHAR2 (4),
    CICLO              VARCHAR2 (2),
    HABEAS_DATA        NUMBER,
    PAGO_INSCRIPCION   NUMBER,
    ENTREVISTA         NUMBER,
    ADMITIDO           NUMBER,
    MATRICULADO        NUMBER,
    SPP                NUMBER,
    FORMULARIO1        NUMBER,
    FORMULARIO2        NUMBER,
    CONSTRAINT CTI_INTERESADO_CRM_PK PRIMARY KEY (TIPDOC,
                                                  NUMDOC,
                                                  CODIGO_FACULTAD,
                                                  JORNADA_FACULTAD,
                                                  ANIO,
                                                  CICLO),
    CONSTRAINT CTI_INTERESADO_CRM_FK FOREIGN KEY (TIPDOC,
                                                  NUMDOC,
                                                  CODIGO_FACULTAD,
                                                  JORNADA_FACULTAD,
                                                  ANIO,
                                                  CICLO)
        REFERENCES CTI_INTERESADO (TIPDOC,
                                   NUMDOC,
                                   CODIGO_FACULTAD,
                                   JORNADA_FACULTAD,
                                   ANIO,
                                   CICLO),
    CONSTRAINT CTI_INT_HABEAS_DATA CHECK (HABEAS_DATA in (0, 1)),
    CONSTRAINT CTI_INT_PAGO_INSCRIPCION CHECK (PAGO_INSCRIPCION in (0, 1)),
    CONSTRAINT CTI_INT_ENTREVISTA CHECK (ENTREVISTA in (0, 1)),
    CONSTRAINT CTI_INT_ADMITIDO CHECK (ADMITIDO in (0, 1)),
    CONSTRAINT CTI_INT_MATRICULADO CHECK (MATRICULADO in (0, 1)),
    CONSTRAINT CTI_INT_SPP CHECK (SPP in (0, 1)),
    CONSTRAINT CTI_INT_FORMULARIO1 CHECK (FORMULARIO1 in (0, 1)),
    CONSTRAINT CTI_INT_FORMULARIO2 CHECK (FORMULARIO2 in (0, 1))
);
/

GRANT SELECT ON CTI_INTERESADO_CRM TO ADMISIONES;

/* **********************CREACION DE TRIGGER PARA LLAMAR EL SERVICIO DEL CRM***************************/
/* ****************************************************************************************************/
CREATE OR REPLACE TRIGGER CALL_CRM_SERVICE_INTERESADO AFTER
    UPDATE OR INSERT ON CTI_INTERESADO_CRM
    FOR EACH ROW
DECLARE
    V_INTERESADO       DESARROLLOSPRE.CTI_INTERESADO%ROWTYPE;
    V_ADITIONAL_INFO   ADMISIONES.CRM_ADITIONAL_INFO;
BEGIN
    SELECT INTERESADO.TIPDOC,
           INTERESADO.NUMDOC,
           INTERESADO.CODIGO_FACULTAD,
           INTERESADO.JORNADA_FACULTAD,
           CASE WHEN ASPIRANTE.CODIGO IS NOT NULL THEN ASPIRANTE.PRIMER_NOMBRE ELSE INTERESADO.PRIMER_NOMBRE END PRIMER_NOMBRE,
           CASE WHEN ASPIRANTE.CODIGO IS NOT NULL THEN ASPIRANTE.SEGUNDO_NOMBRE ELSE INTERESADO.SEGUNDO_NOMBRE END SEGUNDO_NOMBRE,
           CASE WHEN ASPIRANTE.CODIGO IS NOT NULL THEN ASPIRANTE.PRIMER_APELLIDO ELSE INTERESADO.PRIMER_APELLIDO END PRIMER_APELLIDO,
           CASE WHEN ASPIRANTE.CODIGO IS NOT NULL THEN ASPIRANTE.SEGUNDO_APELLIDO ELSE INTERESADO.SEGUNDO_APELLIDO END SEGUNDO_APELLIDO,
           CASE WHEN ASPIRANTE.CODIGO IS NOT NULL THEN ASPIRANTE.CELULAR ELSE INTERESADO.CELULAR END CELULAR,
           CASE WHEN ASPIRANTE.CODIGO IS NOT NULL THEN ASPIRANTE.EMAIL ELSE INTERESADO.EMAIL END EMAIL,
           INTERESADO.ORIGEN,
           INTERESADO.ANIO,
           INTERESADO.CICLO,
           INTERESADO.FECHA
    INTO V_INTERESADO
    FROM CTI_INTERESADO INTERESADO
    LEFT JOIN (SELECT CODIGO,
                      TIPDOC,
                      NUMDOC,
                      CODIGO_FACULTAD,
                      JORNADA_FACULTAD,
                      ANIO,
                      CICLO,
                      IND1,
                      'PREGRADO' ESQUEMA,
                      PRIMER_NOMBRE,
                      SEGUNDO_NOMBRE,
                      PRIMER_APELLIDO,
                      SEGUNDO_APELLIDO,
                      EMAIL,
                      CELULAR
               FROM ADMISIONES.A_ASPIRANTES ASPIRANTE_PREGRADO
               UNION
               SELECT CODIGO,
                      CASE TIPDOC WHEN 'CC' THEN 'C' WHEN 'TI' THEN 'T' WHEN 'PA' THEN 'P' END TIPDOC,
                      NUMDOC,
                      CODIGO_FACULTAD,
                      JORNADA_FACULTAD,
                      ANIO,
                      CICLO,
                      IND1,
                      'POSTGRADO' ESQUEMA,
                      PRIMER_NOMBRE,
                      SEGUNDO_NOMBRE,
                      PRIMER_APELLIDO,
                      SEGUNDO_APELLIDO,
                      EMAIL,
                      CELULAR
               FROM POSTGRADO.A_ASPIRANTES ASPIRANTE_POSTGRADO
    ) ASPIRANTE ON INTERESADO.TIPDOC = ASPIRANTE.TIPDOC
                   AND INTERESADO.NUMDOC = ASPIRANTE.NUMDOC
                   AND INTERESADO.CODIGO_FACULTAD = ASPIRANTE.CODIGO_FACULTAD
                   AND INTERESADO.JORNADA_FACULTAD = ASPIRANTE.JORNADA_FACULTAD
                   AND INTERESADO.ANIO = ASPIRANTE.ANIO
                   AND INTERESADO.CICLO = ASPIRANTE.CICLO
    WHERE INTERESADO.TIPDOC = :NEW.TIPDOC
          AND INTERESADO.NUMDOC            = :NEW.NUMDOC
          AND INTERESADO.CODIGO_FACULTAD   = :NEW.CODIGO_FACULTAD
          AND INTERESADO.JORNADA_FACULTAD  = :NEW.JORNADA_FACULTAD
          AND INTERESADO.ANIO              = :NEW.ANIO
          AND INTERESADO.CICLO             = :NEW.CICLO;

    V_ADITIONAL_INFO := ADMISIONES.CRM_ADITIONAL_INFO (:NEW.HABEAS_DATA, :NEW.PAGO_INSCRIPCION, :NEW.ENTREVISTA, :NEW.ADMITIDO, :NEW.MATRICULADO,
                              :NEW.SPP, :NEW.FORMULARIO1, :NEW.FORMULARIO2,
        CASE
            WHEN UPDATING THEN
                0
            ELSE 1
        END
    );

    IF (V_INTERESADO.ORIGEN = 'sepRebr5') THEN
        ADMISIONES.CALL_CRM_SERVICE (V_INTERESADO, V_ADITIONAL_INFO);
    ELSIF (V_INTERESADO.ORIGEN != 'sepRebr5' AND ADMISIONES.ADITIONAL_INFO_HAS_VALUES (V_ADITIONAL_INFO) = '1') THEN
        V_ADITIONAL_INFO.NUEVO := '0';
        ADMISIONES.CALL_CRM_SERVICE (V_INTERESADO, V_ADITIONAL_INFO);
    END IF;

END;
/

/* ***************CREACION DEL PAQUETE PARA MANIPULACION DE LA TABLA CTI_INTERESADO_CRM****************/
/* ****************************************************************************************************/

CREATE OR REPLACE PACKAGE PKG_INTERESADOS_CRM IS
    FUNCTION GET_INTERESADO (
        P_TIPDOC             VARCHAR2,
        P_NUMDOC             VARCHAR2,
        P_CODIGO_FACULTAD    VARCHAR2,
        P_JORNADA_FACULTAD   VARCHAR2,
        P_ANIO               VARCHAR2,
        P_CICLO              VARCHAR2
    ) RETURN CTI_INTERESADO_CRM%ROWTYPE;

    PROCEDURE INSERT_INTERESADO (
        P_TIPDOC             VARCHAR2,
        P_NUMDOC             VARCHAR2,
        P_CODIGO_FACULTAD    VARCHAR2,
        P_JORNADA_FACULTAD   VARCHAR2,
        P_ANIO               VARCHAR2,
        P_CICLO              VARCHAR2
    );

    PROCEDURE REFRESH_INTERESADO (
        P_TIPDOC             VARCHAR2,
        P_NUMDOC             VARCHAR2,
        P_CODIGO_FACULTAD    VARCHAR2,
        P_JORNADA_FACULTAD   VARCHAR2,
        P_ANIO               VARCHAR2,
        P_CICLO              VARCHAR2
    );

    PROCEDURE UPDATE_VALUE (
        P_TIPDOC             VARCHAR2,
        P_NUMDOC             VARCHAR2,
        P_CODIGO_FACULTAD    VARCHAR2,
        P_JORNADA_FACULTAD   VARCHAR2,
        P_ANIO               VARCHAR2,
        P_CICLO              VARCHAR2,
        P_COLUMNA            VARCHAR2,
        P_VALOR              NUMBER
    );

END;
/

SET DEFINE OFF;

CREATE OR REPLACE PACKAGE BODY PKG_INTERESADOS_CRM IS
    
    FUNCTION GET_INTERESADO (
        P_TIPDOC             VARCHAR2,
        P_NUMDOC             VARCHAR2,
        P_CODIGO_FACULTAD    VARCHAR2,
        P_JORNADA_FACULTAD   VARCHAR2,
        P_ANIO               VARCHAR2,
        P_CICLO              VARCHAR2
    ) RETURN CTI_INTERESADO_CRM%ROWTYPE IS
        P_CTI_INTERESADO_CRM CTI_INTERESADO_CRM%ROWTYPE;
    BEGIN
        BEGIN
            SELECT *
            INTO P_CTI_INTERESADO_CRM
            FROM CTI_INTERESADO_CRM A
            WHERE A.TIPDOC = P_TIPDOC
                  AND A.NUMDOC            = P_NUMDOC
                  AND A.CODIGO_FACULTAD   = P_CODIGO_FACULTAD
                  AND A.JORNADA_FACULTAD  = P_JORNADA_FACULTAD
                  AND A.ANIO              = P_ANIO
                  AND A.CICLO             = P_CICLO;

        EXCEPTION
            WHEN NO_DATA_FOUND THEN
                INSERT_INTERESADO (P_TIPDOC, P_NUMDOC, P_CODIGO_FACULTAD, P_JORNADA_FACULTAD, P_ANIO,
                                 P_CICLO);
                SELECT *
                INTO P_CTI_INTERESADO_CRM
                FROM CTI_INTERESADO_CRM A
                WHERE A.TIPDOC = P_TIPDOC
                      AND A.NUMDOC            = P_NUMDOC
                      AND A.CODIGO_FACULTAD   = P_CODIGO_FACULTAD
                      AND A.JORNADA_FACULTAD  = P_JORNADA_FACULTAD
                      AND A.ANIO              = P_ANIO
                      AND A.CICLO             = P_CICLO;

        END;

        RETURN P_CTI_INTERESADO_CRM;
    END;

    PROCEDURE INSERT_INTERESADO (
        P_TIPDOC             VARCHAR2,
        P_NUMDOC             VARCHAR2,
        P_CODIGO_FACULTAD    VARCHAR2,
        P_JORNADA_FACULTAD   VARCHAR2,
        P_ANIO               VARCHAR2,
        P_CICLO              VARCHAR2
    ) IS
        V_NUMERO_REGISTROS NUMBER;
        V_ANIO VARCHAR2(4);
        V_CICLO VARCHAR2(2);
    BEGIN
        SELECT COUNT(*)
        INTO V_NUMERO_REGISTROS
        FROM CTI_INTERESADO_CRM INTERESADO
        WHERE INTERESADO.TIPDOC = P_TIPDOC
                  AND INTERESADO.NUMDOC            = P_NUMDOC
                  AND INTERESADO.CODIGO_FACULTAD   = P_CODIGO_FACULTAD
                  AND INTERESADO.JORNADA_FACULTAD  = P_JORNADA_FACULTAD
                  AND INTERESADO.ANIO              = P_ANIO
                  AND INTERESADO.CICLO             = P_CICLO;
                  
        IF(V_NUMERO_REGISTROS = '0') THEN
            --DBMS_OUTPUT.PUT_LINE('Insertando Interesado P_TIPDOC: ' || P_TIPDOC || ', P_NUMDOC: ' || P_NUMDOC || ', P_CODIGO_FACULTAD: ' || P_CODIGO_FACULTAD || ', P_JORNADA_FACULTAD: ' || P_JORNADA_FACULTAD || ', P_ANIO: ' || P_ANIO || ', P_CICLO: ' || P_CICLO);
            SELECT ANIO,
                   CICLO
            INTO
                V_ANIO,
                V_CICLO
            FROM ADMISIONES.A_FECHAS_DE_CORTE
            WHERE PROCESO =
                CASE
                    WHEN P_CODIGO_FACULTAD < '71' THEN
                        'ADMISION ESTUDIANTES NUEVOS-PREGRADO'
                    ELSE
                        'ADMISION ESTUDIANTES NUEVOS-POSTGRADO'
                END;
            
            
            INSERT INTO CTI_INTERESADO_CRM (
                TIPDOC,
                NUMDOC,
                CODIGO_FACULTAD,
                JORNADA_FACULTAD,
                ANIO,
                CICLO,
                HABEAS_DATA,
                PAGO_INSCRIPCION,
                ENTREVISTA,
                ADMITIDO,
                MATRICULADO,
                SPP,
                FORMULARIO1,
                FORMULARIO2
            )
                SELECT INTERESADO.TIPDOC,
                       INTERESADO.NUMDOC,
                       INTERESADO.CODIGO_FACULTAD,
                       INTERESADO.JORNADA_FACULTAD,
                       INTERESADO.ANIO,
                       INTERESADO.CICLO,
                       ADMISIONES.PKG_ESTADO_INTERESADO.HABEAS_DATA(INTERESADO.TIPDOC, INTERESADO.NUMDOC, INTERESADO.CODIGO_FACULTAD, INTERESADO.JORNADA_FACULTAD, INTERESADO.ANIO, INTERESADO.CICLO) HABEAS_DATA,
                       ADMISIONES.PKG_ESTADO_INTERESADO.PAGO_INSCRIPCION(INTERESADO.TIPDOC, INTERESADO.NUMDOC, INTERESADO.CODIGO_FACULTAD, INTERESADO.JORNADA_FACULTAD, INTERESADO.ANIO, INTERESADO.CICLO) PAGO_INSCRIPCION,
                       ADMISIONES.PKG_ESTADO_INTERESADO.ENTREVISTA(INTERESADO.TIPDOC, INTERESADO.NUMDOC, INTERESADO.CODIGO_FACULTAD, INTERESADO.JORNADA_FACULTAD, INTERESADO.ANIO, INTERESADO.CICLO) ENTREVISTA,
                       ADMISIONES.PKG_ESTADO_INTERESADO.ADMITIDO(INTERESADO.TIPDOC, INTERESADO.NUMDOC, INTERESADO.CODIGO_FACULTAD, INTERESADO.JORNADA_FACULTAD, INTERESADO.ANIO, INTERESADO.CICLO) ADMITIDO,
                       ADMISIONES.PKG_ESTADO_INTERESADO.MATRICULADO(INTERESADO.TIPDOC, INTERESADO.NUMDOC, INTERESADO.CODIGO_FACULTAD, INTERESADO.JORNADA_FACULTAD, INTERESADO.ANIO, INTERESADO.CICLO) MATRICULADO,
                       ADMISIONES.PKG_ESTADO_INTERESADO.SPP(INTERESADO.TIPDOC, INTERESADO.NUMDOC, INTERESADO.CODIGO_FACULTAD, INTERESADO.JORNADA_FACULTAD, INTERESADO.ANIO, INTERESADO.CICLO) SPP,
                       ADMISIONES.PKG_ESTADO_INTERESADO.FORMULARIO1(INTERESADO.TIPDOC, INTERESADO.NUMDOC, INTERESADO.CODIGO_FACULTAD, INTERESADO.JORNADA_FACULTAD, INTERESADO.ANIO, INTERESADO.CICLO) FORMULARIO1,
                       ADMISIONES.PKG_ESTADO_INTERESADO.FORMULARIO2(INTERESADO.TIPDOC, INTERESADO.NUMDOC, INTERESADO.CODIGO_FACULTAD, INTERESADO.JORNADA_FACULTAD, INTERESADO.ANIO, INTERESADO.CICLO) FORMULARIO2
                FROM CTI_INTERESADO                   INTERESADO
                WHERE INTERESADO.TIPDOC = P_TIPDOC
                      AND INTERESADO.NUMDOC            = P_NUMDOC
                      AND INTERESADO.CODIGO_FACULTAD   = P_CODIGO_FACULTAD
                      AND INTERESADO.JORNADA_FACULTAD  = P_JORNADA_FACULTAD
                      AND INTERESADO.ANIO              = P_ANIO
                      AND INTERESADO.CICLO             = P_CICLO
                      AND INTERESADO.ANIO              = V_ANIO
                      AND INTERESADO.CICLO             = V_CICLO;                      
        END IF;
    EXCEPTION
        WHEN OTHERS THEN
            --DBMS_OUTPUT.PUT_LINE('No se pudo insertar el interesado');
            ADMISIONES.PKG_EXCEPTION.LOG_EXCEPTION ();
    END;

    PROCEDURE REFRESH_INTERESADO (
        P_TIPDOC             VARCHAR2,
        P_NUMDOC             VARCHAR2,
        P_CODIGO_FACULTAD    VARCHAR2,
        P_JORNADA_FACULTAD   VARCHAR2,
        P_ANIO               VARCHAR2,
        P_CICLO              VARCHAR2
    ) IS
        P_CTI_INTERESADO_CRM   CTI_INTERESADO_CRM%ROWTYPE;
    BEGIN
        --DBMS_OUTPUT.PUT_LINE('Refrescando Interesado');
        P_CTI_INTERESADO_CRM   := GET_INTERESADO (P_TIPDOC, P_NUMDOC, P_CODIGO_FACULTAD, P_JORNADA_FACULTAD, P_ANIO, P_CICLO);
        
        UPDATE_VALUE(P_TIPDOC, P_NUMDOC, P_CODIGO_FACULTAD, P_JORNADA_FACULTAD, P_ANIO, P_CICLO, 'HABEAS_DATA', ADMISIONES.PKG_ESTADO_INTERESADO.HABEAS_DATA(P_TIPDOC, P_NUMDOC, P_CODIGO_FACULTAD, P_JORNADA_FACULTAD, P_ANIO, P_CICLO));
        UPDATE_VALUE(P_TIPDOC, P_NUMDOC, P_CODIGO_FACULTAD, P_JORNADA_FACULTAD, P_ANIO, P_CICLO, 'PAGO_INSCRIPCION', ADMISIONES.PKG_ESTADO_INTERESADO.PAGO_INSCRIPCION(P_TIPDOC, P_NUMDOC, P_CODIGO_FACULTAD, P_JORNADA_FACULTAD, P_ANIO, P_CICLO));
        UPDATE_VALUE(P_TIPDOC, P_NUMDOC, P_CODIGO_FACULTAD, P_JORNADA_FACULTAD, P_ANIO, P_CICLO, 'ENTREVISTA', ADMISIONES.PKG_ESTADO_INTERESADO.ENTREVISTA(P_TIPDOC, P_NUMDOC, P_CODIGO_FACULTAD, P_JORNADA_FACULTAD, P_ANIO, P_CICLO));
        UPDATE_VALUE(P_TIPDOC, P_NUMDOC, P_CODIGO_FACULTAD, P_JORNADA_FACULTAD, P_ANIO, P_CICLO, 'ADMITIDO', ADMISIONES.PKG_ESTADO_INTERESADO.ADMITIDO(P_TIPDOC, P_NUMDOC, P_CODIGO_FACULTAD, P_JORNADA_FACULTAD, P_ANIO, P_CICLO));
        UPDATE_VALUE(P_TIPDOC, P_NUMDOC, P_CODIGO_FACULTAD, P_JORNADA_FACULTAD, P_ANIO, P_CICLO, 'MATRICULADO', ADMISIONES.PKG_ESTADO_INTERESADO.MATRICULADO(P_TIPDOC, P_NUMDOC, P_CODIGO_FACULTAD, P_JORNADA_FACULTAD, P_ANIO, P_CICLO));
        UPDATE_VALUE(P_TIPDOC, P_NUMDOC, P_CODIGO_FACULTAD, P_JORNADA_FACULTAD, P_ANIO, P_CICLO, 'SPP', ADMISIONES.PKG_ESTADO_INTERESADO.SPP(P_TIPDOC, P_NUMDOC, P_CODIGO_FACULTAD, P_JORNADA_FACULTAD, P_ANIO, P_CICLO));
        UPDATE_VALUE(P_TIPDOC, P_NUMDOC, P_CODIGO_FACULTAD, P_JORNADA_FACULTAD, P_ANIO, P_CICLO, 'FORMULARIO1', ADMISIONES.PKG_ESTADO_INTERESADO.FORMULARIO1(P_TIPDOC, P_NUMDOC, P_CODIGO_FACULTAD, P_JORNADA_FACULTAD, P_ANIO, P_CICLO));
        UPDATE_VALUE(P_TIPDOC, P_NUMDOC, P_CODIGO_FACULTAD, P_JORNADA_FACULTAD, P_ANIO, P_CICLO, 'FORMULARIO2', ADMISIONES.PKG_ESTADO_INTERESADO.FORMULARIO2(P_TIPDOC, P_NUMDOC, P_CODIGO_FACULTAD, P_JORNADA_FACULTAD, P_ANIO, P_CICLO));
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            NULL;
        WHEN OTHERS THEN
            ADMISIONES.PKG_EXCEPTION.LOG_EXCEPTION ();
    END;

    PROCEDURE UPDATE_VALUE (
        P_TIPDOC             VARCHAR2,
        P_NUMDOC             VARCHAR2,
        P_CODIGO_FACULTAD    VARCHAR2,
        P_JORNADA_FACULTAD   VARCHAR2,
        P_ANIO               VARCHAR2,
        P_CICLO              VARCHAR2,
        P_COLUMNA            VARCHAR2,
        P_VALOR              NUMBER
    ) IS
        P_COLUMNA_EXISTE       NUMBER;
        V_QUERY                VARCHAR2 (4000);
        P_CTI_INTERESADO_CRM   CTI_INTERESADO_CRM%ROWTYPE;
    BEGIN
        SELECT COUNT (*)
        INTO P_COLUMNA_EXISTE
        FROM USER_TAB_COLUMNS
        WHERE TABLE_NAME = 'CTI_INTERESADO_CRM'
              AND LOWER (COLUMN_NAME) = LOWER (P_COLUMNA);

        IF (P_COLUMNA_EXISTE = '0') THEN
            --DBMS_OUTPUT.PUT_LINE('La columna ' || P_COLUMNA || ' no existe');
            ADMISIONES.PKG_EXCEPTION.RAISE_EXCEPTION ('-20007');
        END IF;

        --DBMS_OUTPUT.PUT_LINE('Actualizando columna ' || P_COLUMNA);
        
        P_CTI_INTERESADO_CRM   := GET_INTERESADO (P_TIPDOC, P_NUMDOC, P_CODIGO_FACULTAD, P_JORNADA_FACULTAD, P_ANIO, P_CICLO);
        V_QUERY                := q'!
                            UPDATE CTI_INTERESADO_CRM
                            SET [COLUMN] = '[VALUE]'
                            WHERE TIPDOC = :tipdoc
                                  AND NUMDOC            = :numdoc
                                  AND CODIGO_FACULTAD   = :codigo_facultad
                                  AND JORNADA_FACULTAD  = :jornada_facultad
                                  AND ANIO              = :anio
                                  AND CICLO             = :ciclo
                                  AND [COLUMN]          != '[VALUE]'
                  !'
        ;
        V_QUERY                := REPLACE (REPLACE (V_QUERY, '[COLUMN]', P_COLUMNA), '[VALUE]', P_VALOR);

        EXECUTE IMMEDIATE V_QUERY
            USING P_TIPDOC, P_NUMDOC, P_CODIGO_FACULTAD, P_JORNADA_FACULTAD, P_ANIO, P_CICLO;
    EXCEPTION
        WHEN OTHERS THEN
            ADMISIONES.PKG_EXCEPTION.LOG_EXCEPTION ();
    END;

END;
/

GRANT EXECUTE ON PKG_INTERESADOS_CRM TO ADMISIONES;
GRANT EXECUTE ON PKG_INTERESADOS_CRM TO POSTGRADO;

/* ************************************CREACION DEL TRIGGER********************************************/
/* ****************************************************************************************************/

CREATE OR REPLACE TRIGGER INSERT_CRM_INTERESADO FOR
    UPDATE OR INSERT ON CTI_INTERESADO
COMPOUND TRIGGER
    TYPE CTI_INTERESADO_TMP IS RECORD (
        TIPDOC             VARCHAR2 (8),
        NUMDOC             VARCHAR2 (32),
        CODIGO_FACULTAD    VARCHAR2 (2),
        JORNADA_FACULTAD   VARCHAR2 (1),
        ANIO               VARCHAR2 (4),
        CICLO              VARCHAR2 (2)
    );
    TYPE CTI_INTERESADOS_TMP IS
        TABLE OF CTI_INTERESADO_TMP INDEX BY PLS_INTEGER;
    G_ROW_LEVEL_INFO CTI_INTERESADOS_TMP;
    AFTER EACH ROW IS BEGIN
        G_ROW_LEVEL_INFO (G_ROW_LEVEL_INFO.COUNT + 1).TIPDOC        := :NEW.TIPDOC;
        G_ROW_LEVEL_INFO (G_ROW_LEVEL_INFO.COUNT).NUMDOC            := :NEW.NUMDOC;
        G_ROW_LEVEL_INFO (G_ROW_LEVEL_INFO.COUNT).CODIGO_FACULTAD   := :NEW.CODIGO_FACULTAD;
        G_ROW_LEVEL_INFO (G_ROW_LEVEL_INFO.COUNT).JORNADA_FACULTAD  := :NEW.JORNADA_FACULTAD;
        G_ROW_LEVEL_INFO (G_ROW_LEVEL_INFO.COUNT).ANIO              := :NEW.ANIO;
        G_ROW_LEVEL_INFO (G_ROW_LEVEL_INFO.COUNT).CICLO             := :NEW.CICLO;
    END AFTER EACH ROW;
    AFTER STATEMENT IS BEGIN
        FOR INDX IN 1..G_ROW_LEVEL_INFO.COUNT LOOP
            PKG_INTERESADOS_CRM.INSERT_INTERESADO (G_ROW_LEVEL_INFO (INDX).TIPDOC, G_ROW_LEVEL_INFO (INDX).NUMDOC, G_ROW_LEVEL_INFO (INDX).CODIGO_FACULTAD, G_ROW_LEVEL_INFO (INDX).JORNADA_FACULTAD, G_ROW_LEVEL_INFO (INDX).ANIO,
                                                  G_ROW_LEVEL_INFO (INDX).CICLO);
        END LOOP;
    END AFTER STATEMENT;
END;
/

/* ****************************************SCRIPTS DE PRUEBA*******************************************/
/* ****************************************************************************************************/

SELECT * FROM CTI_INTERESADO WHERE NUMDOC = '102222444452234322';
SELECT * FROM CTI_INTERESADO_CRM;

DECLARE
    P_CTI_INTERESADO_CRM CTI_INTERESADO_CRM%ROWTYPE;
BEGIN
    PKG_INTERESADOS_CRM.INSERT_INTERESADO ('C', '1032462812', '81', 'N', '2017', '02');
    P_CTI_INTERESADO_CRM := PKG_INTERESADOS_CRM.GET_INTERESADO ('C', '1071169865', '30', 'N', '2017', '02');
    PKG_INTERESADOS_CRM.UPDATE_VALUE ('C', '1071169865', '30', 'N', '2017', '02', 'ADMITIDO', '1');
EXCEPTION
    WHEN OTHERS THEN
        ADMISIONES.PKG_EXCEPTION.LOG_EXCEPTION ();
END;
/

