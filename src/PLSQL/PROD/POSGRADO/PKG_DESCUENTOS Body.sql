CREATE OR REPLACE PACKAGE BODY PKG_DESCUENTOS AS
    FUNCTION NULL_FUNCTION (
        P_CODIGO_ESTUDIANTE VARCHAR2
    ) RETURN NUMBER IS
    BEGIN
        RETURN 0;
    END;

    FUNCTION ES_EGRESADO_NUEVO (
        P_CODIGO_ESTUDIANTE VARCHAR2
    ) RETURN NUMBER IS
        P_ES_GRADUADO NUMBER;
        V_CODIGO B_ESTUDIANTES.CODIGO%TYPE;
        V_NUMDOC DATOS_PERSONALES.NUMERO_DOCUMENTO%TYPE;
    BEGIN
        SELECT E.CODIGO, DP.NUMERO_DOCUMENTO
        INTO V_CODIGO, V_NUMDOC
        FROM B_ESTUDIANTES E
        INNER JOIN
        DATOS_PERSONALES DP
        ON E.CODIGO = DP.CODIGO_ESTUDIANTE
        WHERE E.CODIGO = P_CODIGO_ESTUDIANTE
        AND E.TIPO_DE_INGRESO NOT IN ('RI','RA','NR','ME','TI','TE')
        UNION
        SELECT A.COD_DEF, A.NUMDOC
        FROM A_ASPIRANTES A
        WHERE A.COD_DEF = P_CODIGO_ESTUDIANTE;
        --------------------------------------
        IF ADMISIONES.PKG_UTILS.ESNUEVO(V_CODIGO)=1 AND ADMISIONES.PKG_INSCRIPCIONES.FNC_ES_GRADUADO(V_NUMDOC) = 'SI' THEN
            RETURN 1;
        END IF;
        RETURN 0;
    EXCEPTION 
        WHEN OTHERS THEN
            RETURN 0;
    END;

    FUNCTION ES_EGRESADO_ANTIGUO (
        P_CODIGO_ESTUDIANTE VARCHAR2
    ) RETURN NUMBER IS
        P_ES_GRADUADO NUMBER;
    BEGIN
        SELECT DISTINCT COUNT(1)
        INTO            P_ES_GRADUADO
        FROM            (SELECT CODIGO_ESTUDIANTE,
                                NUMERO_DOCUMENTO
                         FROM   ADMISIONES.DATOS_PERSONALES
                         UNION
                         SELECT CODIGO_ESTUDIANTE,
                                NUMERO_DOCUMENTO
                         FROM   POSTGRADO.DATOS_PERSONALES) A
        INNER JOIN       B_ESTUDIANTES E ON E.CODIGO = A.CODIGO_ESTUDIANTE
        WHERE               CODIGO_ESTUDIANTE = P_CODIGO_ESTUDIANTE
                        AND ADMISIONES.PKG_INSCRIPCIONES.FNC_ES_GRADUADO(NUMERO_DOCUMENTO) = 'SI'
                        AND (
                            E.MATRICULADOS_CICLO_ANTERIOR IN ('P', 'V')
                            OR (ADMISIONES.PKG_UTILS.ESNUEVO(E.CODIGO)=1 AND E.TIPO_DE_INGRESO IN ('RI','RA','NR','ME','TI','TE'))
                        );

        IF(P_ES_GRADUADO >= 1) THEN
            RETURN 1;
        ELSE
            RETURN 0;
        END IF;
    EXCEPTION 
        WHEN OTHERS THEN
            RETURN 0;
    END;
    
    FUNCTION ES_ULTIMA_MATERIA (
        P_CODIGO_ESTUDIANTE VARCHAR2
    ) RETURN NUMBER IS
        V_ANIO VARCHAR2(4);
        V_CICLO VARCHAR2(2);
        V_ESQUEMA VARCHAR2(32);
        P_COINCIDENCIAS NUMBER DEFAULT 0;
    BEGIN
        ADMISIONES.PKG_UTILS.GETANIOCICLOESQUEMA('2',V_ANIO,V_CICLO,V_ESQUEMA);
        
        SELECT COUNT(*)
        INTO   P_COINCIDENCIAS
        FROM   LIQUIDACION_GUIAS.VW_DES_ULTIMA_MATERIA@UVIRTUAL.LASALLE.EDU.CO
        WHERE      CODIGO = P_CODIGO_ESTUDIANTE
               AND ANYO = V_ANIO
               AND PERIODO = V_CICLO;
        
        IF(P_COINCIDENCIAS >= 1) THEN
            RETURN 1;
        ELSE
            RETURN 0;
        END IF;
    EXCEPTION 
        WHEN OTHERS THEN
            RETURN 0;
    END;
END PKG_DESCUENTOS;